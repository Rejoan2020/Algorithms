#include<bits/stdc++.h>
using namespace std;
// using namespace std::chrono; 
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;

using ll = long long; 
const int N = 2e5+10;
ll bit[N];
ll a[N];

void update(ll i, ll x){
    for(; i < N; i += (i&-i))
        bit[i] += x;
}

ll sum(ll i){
    ll ans = 0;
    for(; i > 0; i -= (i&-i))
        ans += bit[i];
    return ans;
}

void solve() {
    // cout<<5<<endl;
    ll n;cin>>n;
    ll x;cin>>x;
    // cout<<x<<endl;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        update(i,a[i]);
    }
    // cout<<x<<endl;
    while(x--){
        ll type;cin>>type;
        if(type==1){
            ll pos;cin>>pos;
            ll val;cin>>val;
            update(pos,val-a[pos]);
            a[pos] = val;
        }
        else{
            ll l,r;cin>>l>>r;
            cout<<sum(r)-sum(l-1)<<endl;
        }
    }
}   

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int testcase=1;
    // cin>>testcase;
    int tst = 1;
    while(testcase--){
        // cout<<"Case "<<tst<<": ";
        solve();
        // tst++;
    }

}
